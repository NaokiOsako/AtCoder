#include<bits/stdc++.h>
using namespace std;
#define ll long long int

// 深さ優先探索
vector<bool> seen;
vector<vector<int>> G;
int a[2001][2001];
vector<int> ans(3000, 0);



void bfs(int top) {
    queue<int> q;
    q.push(top);
    seen[top]=true;

    while(!q.empty()){
	int v = q.front();
	q.pop();
	for(auto next_v: G[v]){
	    if(seen[next_v])
		continue;
	    q.push(next_v);
	    seen[next_v]=true;
	    a[top][next_v]=a[top][v]+1;
	    if(top<next_v)
		ans[a[top][next_v]]++;
	}

    }
}


int main() {
    int N, X, Y;
    cin >> N >> X >> Y;
    X--;
    Y--;

    G.resize(N);

    for(int i=0; i<N-1; i++){
        G[i].push_back(i+1);
	G[i+1].push_back(i);
    }
    G[X].push_back(Y);
    G[Y].push_back(X);
    for(int i=0; i<N; i++){
	for(int j=0; j<N; j++){
	    a[i][j]=0;
	}	
    }

    for(int i=0; i<N; i++){
	seen.assign(N, false); // 全頂点を「未訪問」に初期化
	bfs(i);
    }

    for(int i=1; i<N; i++){
	cout << ans[i] << endl;
    }

} 


